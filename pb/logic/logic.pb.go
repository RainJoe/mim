// Code generated by protoc-gen-go. DO NOT EDIT.
// source: logic.proto

package protocol

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Response struct {
	Ts                   int64    `protobuf:"varint,1,opt,name=ts,proto3" json:"ts,omitempty"`
	Seq                  int64    `protobuf:"varint,2,opt,name=seq,proto3" json:"seq,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_60207fea82c31ca8, []int{0}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetTs() int64 {
	if m != nil {
		return m.Ts
	}
	return 0
}

func (m *Response) GetSeq() int64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

type AuthRequest struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Uid                  string   `protobuf:"bytes,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Ts                   int64    `protobuf:"varint,3,opt,name=ts,proto3" json:"ts,omitempty"`
	Seq                  int64    `protobuf:"varint,4,opt,name=seq,proto3" json:"seq,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthRequest) Reset()         { *m = AuthRequest{} }
func (m *AuthRequest) String() string { return proto.CompactTextString(m) }
func (*AuthRequest) ProtoMessage()    {}
func (*AuthRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_60207fea82c31ca8, []int{1}
}

func (m *AuthRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthRequest.Unmarshal(m, b)
}
func (m *AuthRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthRequest.Marshal(b, m, deterministic)
}
func (m *AuthRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthRequest.Merge(m, src)
}
func (m *AuthRequest) XXX_Size() int {
	return xxx_messageInfo_AuthRequest.Size(m)
}
func (m *AuthRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AuthRequest proto.InternalMessageInfo

func (m *AuthRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *AuthRequest) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *AuthRequest) GetTs() int64 {
	if m != nil {
		return m.Ts
	}
	return 0
}

func (m *AuthRequest) GetSeq() int64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

type AuthResponse struct {
	Status               int32    `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Msg                  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Ts                   int64    `protobuf:"varint,3,opt,name=ts,proto3" json:"ts,omitempty"`
	Seq                  int64    `protobuf:"varint,4,opt,name=seq,proto3" json:"seq,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthResponse) Reset()         { *m = AuthResponse{} }
func (m *AuthResponse) String() string { return proto.CompactTextString(m) }
func (*AuthResponse) ProtoMessage()    {}
func (*AuthResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_60207fea82c31ca8, []int{2}
}

func (m *AuthResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthResponse.Unmarshal(m, b)
}
func (m *AuthResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthResponse.Marshal(b, m, deterministic)
}
func (m *AuthResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthResponse.Merge(m, src)
}
func (m *AuthResponse) XXX_Size() int {
	return xxx_messageInfo_AuthResponse.Size(m)
}
func (m *AuthResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AuthResponse proto.InternalMessageInfo

func (m *AuthResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *AuthResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *AuthResponse) GetTs() int64 {
	if m != nil {
		return m.Ts
	}
	return 0
}

func (m *AuthResponse) GetSeq() int64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

type LogoutRequest struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Uid                  string   `protobuf:"bytes,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Ts                   int64    `protobuf:"varint,3,opt,name=ts,proto3" json:"ts,omitempty"`
	Seq                  int64    `protobuf:"varint,4,opt,name=seq,proto3" json:"seq,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogoutRequest) Reset()         { *m = LogoutRequest{} }
func (m *LogoutRequest) String() string { return proto.CompactTextString(m) }
func (*LogoutRequest) ProtoMessage()    {}
func (*LogoutRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_60207fea82c31ca8, []int{3}
}

func (m *LogoutRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogoutRequest.Unmarshal(m, b)
}
func (m *LogoutRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogoutRequest.Marshal(b, m, deterministic)
}
func (m *LogoutRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogoutRequest.Merge(m, src)
}
func (m *LogoutRequest) XXX_Size() int {
	return xxx_messageInfo_LogoutRequest.Size(m)
}
func (m *LogoutRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LogoutRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LogoutRequest proto.InternalMessageInfo

func (m *LogoutRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *LogoutRequest) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *LogoutRequest) GetTs() int64 {
	if m != nil {
		return m.Ts
	}
	return 0
}

func (m *LogoutRequest) GetSeq() int64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

type LogoutResponse struct {
	Ts                   int64    `protobuf:"varint,1,opt,name=ts,proto3" json:"ts,omitempty"`
	Seq                  int64    `protobuf:"varint,2,opt,name=seq,proto3" json:"seq,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogoutResponse) Reset()         { *m = LogoutResponse{} }
func (m *LogoutResponse) String() string { return proto.CompactTextString(m) }
func (*LogoutResponse) ProtoMessage()    {}
func (*LogoutResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_60207fea82c31ca8, []int{4}
}

func (m *LogoutResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogoutResponse.Unmarshal(m, b)
}
func (m *LogoutResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogoutResponse.Marshal(b, m, deterministic)
}
func (m *LogoutResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogoutResponse.Merge(m, src)
}
func (m *LogoutResponse) XXX_Size() int {
	return xxx_messageInfo_LogoutResponse.Size(m)
}
func (m *LogoutResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LogoutResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LogoutResponse proto.InternalMessageInfo

func (m *LogoutResponse) GetTs() int64 {
	if m != nil {
		return m.Ts
	}
	return 0
}

func (m *LogoutResponse) GetSeq() int64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

// 发送者发送消息的协议
type C2CSendRequest struct {
	From                 string   `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To                   string   `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	Content              string   `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	Ts                   int64    `protobuf:"varint,4,opt,name=ts,proto3" json:"ts,omitempty"`
	Seq                  int64    `protobuf:"varint,5,opt,name=seq,proto3" json:"seq,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2CSendRequest) Reset()         { *m = C2CSendRequest{} }
func (m *C2CSendRequest) String() string { return proto.CompactTextString(m) }
func (*C2CSendRequest) ProtoMessage()    {}
func (*C2CSendRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_60207fea82c31ca8, []int{5}
}

func (m *C2CSendRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_C2CSendRequest.Unmarshal(m, b)
}
func (m *C2CSendRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_C2CSendRequest.Marshal(b, m, deterministic)
}
func (m *C2CSendRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2CSendRequest.Merge(m, src)
}
func (m *C2CSendRequest) XXX_Size() int {
	return xxx_messageInfo_C2CSendRequest.Size(m)
}
func (m *C2CSendRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_C2CSendRequest.DiscardUnknown(m)
}

var xxx_messageInfo_C2CSendRequest proto.InternalMessageInfo

func (m *C2CSendRequest) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *C2CSendRequest) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *C2CSendRequest) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *C2CSendRequest) GetTs() int64 {
	if m != nil {
		return m.Ts
	}
	return 0
}

func (m *C2CSendRequest) GetSeq() int64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

type C2CSendResponse struct {
	MsgId                int64    `protobuf:"varint,1,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`
	Ts                   int64    `protobuf:"varint,2,opt,name=ts,proto3" json:"ts,omitempty"`
	Seq                  int64    `protobuf:"varint,3,opt,name=seq,proto3" json:"seq,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2CSendResponse) Reset()         { *m = C2CSendResponse{} }
func (m *C2CSendResponse) String() string { return proto.CompactTextString(m) }
func (*C2CSendResponse) ProtoMessage()    {}
func (*C2CSendResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_60207fea82c31ca8, []int{6}
}

func (m *C2CSendResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_C2CSendResponse.Unmarshal(m, b)
}
func (m *C2CSendResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_C2CSendResponse.Marshal(b, m, deterministic)
}
func (m *C2CSendResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2CSendResponse.Merge(m, src)
}
func (m *C2CSendResponse) XXX_Size() int {
	return xxx_messageInfo_C2CSendResponse.Size(m)
}
func (m *C2CSendResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_C2CSendResponse.DiscardUnknown(m)
}

var xxx_messageInfo_C2CSendResponse proto.InternalMessageInfo

func (m *C2CSendResponse) GetMsgId() int64 {
	if m != nil {
		return m.MsgId
	}
	return 0
}

func (m *C2CSendResponse) GetTs() int64 {
	if m != nil {
		return m.Ts
	}
	return 0
}

func (m *C2CSendResponse) GetSeq() int64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

type C2CPushResponse struct {
	MsgId                int64    `protobuf:"varint,1,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`
	Ts                   int64    `protobuf:"varint,2,opt,name=ts,proto3" json:"ts,omitempty"`
	Seq                  int64    `protobuf:"varint,3,opt,name=seq,proto3" json:"seq,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2CPushResponse) Reset()         { *m = C2CPushResponse{} }
func (m *C2CPushResponse) String() string { return proto.CompactTextString(m) }
func (*C2CPushResponse) ProtoMessage()    {}
func (*C2CPushResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_60207fea82c31ca8, []int{7}
}

func (m *C2CPushResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_C2CPushResponse.Unmarshal(m, b)
}
func (m *C2CPushResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_C2CPushResponse.Marshal(b, m, deterministic)
}
func (m *C2CPushResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2CPushResponse.Merge(m, src)
}
func (m *C2CPushResponse) XXX_Size() int {
	return xxx_messageInfo_C2CPushResponse.Size(m)
}
func (m *C2CPushResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_C2CPushResponse.DiscardUnknown(m)
}

var xxx_messageInfo_C2CPushResponse proto.InternalMessageInfo

func (m *C2CPushResponse) GetMsgId() int64 {
	if m != nil {
		return m.MsgId
	}
	return 0
}

func (m *C2CPushResponse) GetTs() int64 {
	if m != nil {
		return m.Ts
	}
	return 0
}

func (m *C2CPushResponse) GetSeq() int64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

// 发送者发送群消息协议
type C2GSendRequest struct {
	From                 string   `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	Group                string   `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`
	Content              string   `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	Ts                   int64    `protobuf:"varint,4,opt,name=ts,proto3" json:"ts,omitempty"`
	Seq                  int64    `protobuf:"varint,5,opt,name=seq,proto3" json:"seq,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2GSendRequest) Reset()         { *m = C2GSendRequest{} }
func (m *C2GSendRequest) String() string { return proto.CompactTextString(m) }
func (*C2GSendRequest) ProtoMessage()    {}
func (*C2GSendRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_60207fea82c31ca8, []int{8}
}

func (m *C2GSendRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_C2GSendRequest.Unmarshal(m, b)
}
func (m *C2GSendRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_C2GSendRequest.Marshal(b, m, deterministic)
}
func (m *C2GSendRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2GSendRequest.Merge(m, src)
}
func (m *C2GSendRequest) XXX_Size() int {
	return xxx_messageInfo_C2GSendRequest.Size(m)
}
func (m *C2GSendRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_C2GSendRequest.DiscardUnknown(m)
}

var xxx_messageInfo_C2GSendRequest proto.InternalMessageInfo

func (m *C2GSendRequest) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *C2GSendRequest) GetGroup() string {
	if m != nil {
		return m.Group
	}
	return ""
}

func (m *C2GSendRequest) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *C2GSendRequest) GetTs() int64 {
	if m != nil {
		return m.Ts
	}
	return 0
}

func (m *C2GSendRequest) GetSeq() int64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

type C2GSendResponse struct {
	MsgId                int64    `protobuf:"varint,1,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`
	Ts                   int64    `protobuf:"varint,2,opt,name=ts,proto3" json:"ts,omitempty"`
	Seq                  int64    `protobuf:"varint,3,opt,name=seq,proto3" json:"seq,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2GSendResponse) Reset()         { *m = C2GSendResponse{} }
func (m *C2GSendResponse) String() string { return proto.CompactTextString(m) }
func (*C2GSendResponse) ProtoMessage()    {}
func (*C2GSendResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_60207fea82c31ca8, []int{9}
}

func (m *C2GSendResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_C2GSendResponse.Unmarshal(m, b)
}
func (m *C2GSendResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_C2GSendResponse.Marshal(b, m, deterministic)
}
func (m *C2GSendResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2GSendResponse.Merge(m, src)
}
func (m *C2GSendResponse) XXX_Size() int {
	return xxx_messageInfo_C2GSendResponse.Size(m)
}
func (m *C2GSendResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_C2GSendResponse.DiscardUnknown(m)
}

var xxx_messageInfo_C2GSendResponse proto.InternalMessageInfo

func (m *C2GSendResponse) GetMsgId() int64 {
	if m != nil {
		return m.MsgId
	}
	return 0
}

func (m *C2GSendResponse) GetTs() int64 {
	if m != nil {
		return m.Ts
	}
	return 0
}

func (m *C2GSendResponse) GetSeq() int64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

type C2GPushResponse struct {
	MsgId                int64    `protobuf:"varint,1,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`
	Ts                   int64    `protobuf:"varint,2,opt,name=ts,proto3" json:"ts,omitempty"`
	Seq                  int64    `protobuf:"varint,3,opt,name=seq,proto3" json:"seq,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2GPushResponse) Reset()         { *m = C2GPushResponse{} }
func (m *C2GPushResponse) String() string { return proto.CompactTextString(m) }
func (*C2GPushResponse) ProtoMessage()    {}
func (*C2GPushResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_60207fea82c31ca8, []int{10}
}

func (m *C2GPushResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_C2GPushResponse.Unmarshal(m, b)
}
func (m *C2GPushResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_C2GPushResponse.Marshal(b, m, deterministic)
}
func (m *C2GPushResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2GPushResponse.Merge(m, src)
}
func (m *C2GPushResponse) XXX_Size() int {
	return xxx_messageInfo_C2GPushResponse.Size(m)
}
func (m *C2GPushResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_C2GPushResponse.DiscardUnknown(m)
}

var xxx_messageInfo_C2GPushResponse proto.InternalMessageInfo

func (m *C2GPushResponse) GetMsgId() int64 {
	if m != nil {
		return m.MsgId
	}
	return 0
}

func (m *C2GPushResponse) GetTs() int64 {
	if m != nil {
		return m.Ts
	}
	return 0
}

func (m *C2GPushResponse) GetSeq() int64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

type C2SPullMessageRequest struct {
	Uid                  string   `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	MsgId                int64    `protobuf:"varint,2,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`
	Limit                int32    `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Ts                   int64    `protobuf:"varint,4,opt,name=ts,proto3" json:"ts,omitempty"`
	Seq                  int64    `protobuf:"varint,5,opt,name=seq,proto3" json:"seq,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2SPullMessageRequest) Reset()         { *m = C2SPullMessageRequest{} }
func (m *C2SPullMessageRequest) String() string { return proto.CompactTextString(m) }
func (*C2SPullMessageRequest) ProtoMessage()    {}
func (*C2SPullMessageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_60207fea82c31ca8, []int{11}
}

func (m *C2SPullMessageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_C2SPullMessageRequest.Unmarshal(m, b)
}
func (m *C2SPullMessageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_C2SPullMessageRequest.Marshal(b, m, deterministic)
}
func (m *C2SPullMessageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2SPullMessageRequest.Merge(m, src)
}
func (m *C2SPullMessageRequest) XXX_Size() int {
	return xxx_messageInfo_C2SPullMessageRequest.Size(m)
}
func (m *C2SPullMessageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_C2SPullMessageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_C2SPullMessageRequest proto.InternalMessageInfo

func (m *C2SPullMessageRequest) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *C2SPullMessageRequest) GetMsgId() int64 {
	if m != nil {
		return m.MsgId
	}
	return 0
}

func (m *C2SPullMessageRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *C2SPullMessageRequest) GetTs() int64 {
	if m != nil {
		return m.Ts
	}
	return 0
}

func (m *C2SPullMessageRequest) GetSeq() int64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

type PullMsg struct {
	From                 string   `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	Group                string   `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`
	Content              string   `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	MsgId                int64    `protobuf:"varint,4,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`
	SendTime             int64    `protobuf:"varint,5,opt,name=send_time,json=sendTime,proto3" json:"send_time,omitempty"`
	Ts                   int64    `protobuf:"varint,6,opt,name=ts,proto3" json:"ts,omitempty"`
	Seq                  int64    `protobuf:"varint,7,opt,name=seq,proto3" json:"seq,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PullMsg) Reset()         { *m = PullMsg{} }
func (m *PullMsg) String() string { return proto.CompactTextString(m) }
func (*PullMsg) ProtoMessage()    {}
func (*PullMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_60207fea82c31ca8, []int{12}
}

func (m *PullMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PullMsg.Unmarshal(m, b)
}
func (m *PullMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PullMsg.Marshal(b, m, deterministic)
}
func (m *PullMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PullMsg.Merge(m, src)
}
func (m *PullMsg) XXX_Size() int {
	return xxx_messageInfo_PullMsg.Size(m)
}
func (m *PullMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_PullMsg.DiscardUnknown(m)
}

var xxx_messageInfo_PullMsg proto.InternalMessageInfo

func (m *PullMsg) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *PullMsg) GetGroup() string {
	if m != nil {
		return m.Group
	}
	return ""
}

func (m *PullMsg) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *PullMsg) GetMsgId() int64 {
	if m != nil {
		return m.MsgId
	}
	return 0
}

func (m *PullMsg) GetSendTime() int64 {
	if m != nil {
		return m.SendTime
	}
	return 0
}

func (m *PullMsg) GetTs() int64 {
	if m != nil {
		return m.Ts
	}
	return 0
}

func (m *PullMsg) GetSeq() int64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

type C2SPullMessageResponse struct {
	Msg                  []*PullMsg `protobuf:"bytes,1,rep,name=msg,proto3" json:"msg,omitempty"`
	Ts                   int64      `protobuf:"varint,2,opt,name=ts,proto3" json:"ts,omitempty"`
	Seq                  int64      `protobuf:"varint,3,opt,name=seq,proto3" json:"seq,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *C2SPullMessageResponse) Reset()         { *m = C2SPullMessageResponse{} }
func (m *C2SPullMessageResponse) String() string { return proto.CompactTextString(m) }
func (*C2SPullMessageResponse) ProtoMessage()    {}
func (*C2SPullMessageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_60207fea82c31ca8, []int{13}
}

func (m *C2SPullMessageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_C2SPullMessageResponse.Unmarshal(m, b)
}
func (m *C2SPullMessageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_C2SPullMessageResponse.Marshal(b, m, deterministic)
}
func (m *C2SPullMessageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2SPullMessageResponse.Merge(m, src)
}
func (m *C2SPullMessageResponse) XXX_Size() int {
	return xxx_messageInfo_C2SPullMessageResponse.Size(m)
}
func (m *C2SPullMessageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_C2SPullMessageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_C2SPullMessageResponse proto.InternalMessageInfo

func (m *C2SPullMessageResponse) GetMsg() []*PullMsg {
	if m != nil {
		return m.Msg
	}
	return nil
}

func (m *C2SPullMessageResponse) GetTs() int64 {
	if m != nil {
		return m.Ts
	}
	return 0
}

func (m *C2SPullMessageResponse) GetSeq() int64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func init() {
	proto.RegisterType((*Response)(nil), "protocol.Response")
	proto.RegisterType((*AuthRequest)(nil), "protocol.AuthRequest")
	proto.RegisterType((*AuthResponse)(nil), "protocol.AuthResponse")
	proto.RegisterType((*LogoutRequest)(nil), "protocol.LogoutRequest")
	proto.RegisterType((*LogoutResponse)(nil), "protocol.LogoutResponse")
	proto.RegisterType((*C2CSendRequest)(nil), "protocol.C2CSendRequest")
	proto.RegisterType((*C2CSendResponse)(nil), "protocol.C2CSendResponse")
	proto.RegisterType((*C2CPushResponse)(nil), "protocol.C2CPushResponse")
	proto.RegisterType((*C2GSendRequest)(nil), "protocol.C2GSendRequest")
	proto.RegisterType((*C2GSendResponse)(nil), "protocol.C2GSendResponse")
	proto.RegisterType((*C2GPushResponse)(nil), "protocol.C2GPushResponse")
	proto.RegisterType((*C2SPullMessageRequest)(nil), "protocol.C2SPullMessageRequest")
	proto.RegisterType((*PullMsg)(nil), "protocol.PullMsg")
	proto.RegisterType((*C2SPullMessageResponse)(nil), "protocol.C2SPullMessageResponse")
}

func init() { proto.RegisterFile("logic.proto", fileDescriptor_60207fea82c31ca8) }

var fileDescriptor_60207fea82c31ca8 = []byte{
	// 530 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x54, 0xcf, 0x6f, 0xd3, 0x30,
	0x18, 0x55, 0x7e, 0xb6, 0xfd, 0x3a, 0x0a, 0x58, 0x6d, 0x29, 0xe1, 0x40, 0x35, 0x2e, 0x3b, 0xa0,
	0x1e, 0x82, 0x38, 0x21, 0x21, 0x4d, 0x3d, 0x44, 0xa0, 0x22, 0x4d, 0x29, 0x12, 0x82, 0x4b, 0x35,
	0x52, 0x93, 0x45, 0x4b, 0xe2, 0xae, 0x76, 0x26, 0xfe, 0x1f, 0xfe, 0x1b, 0xfe, 0x2a, 0x64, 0xe7,
	0xcb, 0x9c, 0x64, 0x1d, 0xab, 0xd4, 0x9e, 0xe2, 0xcf, 0xf6, 0x7b, 0xdf, 0xcb, 0xb3, 0xfd, 0xa0,
	0x9f, 0xb2, 0x38, 0x89, 0x66, 0x9b, 0x2d, 0x13, 0x8c, 0x74, 0xd5, 0x27, 0x62, 0xe9, 0xe9, 0x5b,
	0xe8, 0x86, 0x94, 0x6f, 0x58, 0xce, 0x29, 0x19, 0x80, 0x29, 0xf8, 0xc4, 0x98, 0x1a, 0x67, 0x56,
	0x68, 0x0a, 0x4e, 0x9e, 0x81, 0xc5, 0xe9, 0xcd, 0xc4, 0x54, 0x13, 0x72, 0x78, 0xfa, 0x0d, 0xfa,
	0xe7, 0x85, 0xb8, 0x0a, 0xe9, 0x4d, 0x41, 0xb9, 0x20, 0x43, 0x70, 0x04, 0xbb, 0xa6, 0xb9, 0xc2,
	0xf4, 0xc2, 0xb2, 0x90, 0xb0, 0x22, 0x59, 0x2b, 0x58, 0x2f, 0x94, 0x43, 0x24, 0xb6, 0xda, 0xc4,
	0xb6, 0x26, 0xfe, 0x01, 0x27, 0x25, 0x31, 0x4a, 0x19, 0x83, 0xcb, 0xc5, 0xa5, 0x28, 0x4a, 0x39,
	0x4e, 0x88, 0x95, 0x44, 0x66, 0x3c, 0xae, 0xb8, 0x33, 0x1e, 0xef, 0xc1, 0xfd, 0x1d, 0x9e, 0x2c,
	0x58, 0xcc, 0x0a, 0x71, 0x7c, 0xd9, 0x3e, 0x0c, 0x2a, 0xea, 0xbd, 0x3d, 0xdc, 0xc0, 0x60, 0xee,
	0xcf, 0x97, 0x34, 0x5f, 0x57, 0x7a, 0x08, 0xd8, 0xbf, 0xb6, 0x2c, 0x43, 0x39, 0x6a, 0xac, 0x78,
	0x18, 0x8a, 0x31, 0x05, 0x23, 0x13, 0xe8, 0x44, 0x2c, 0x17, 0x34, 0x17, 0x4a, 0x50, 0x2f, 0xac,
	0x4a, 0xec, 0x68, 0xb7, 0x3b, 0x3a, 0xba, 0xe3, 0x67, 0x78, 0x7a, 0xd7, 0x11, 0x65, 0x8e, 0xc0,
	0xcd, 0x78, 0xbc, 0x4a, 0xd6, 0x28, 0xd5, 0xc9, 0x78, 0xfc, 0xa9, 0xfa, 0x63, 0xb3, 0xcd, 0x65,
	0xb5, 0xb9, 0x2e, 0x0a, 0x7e, 0x75, 0x38, 0xd7, 0xad, 0x74, 0x22, 0x78, 0xcc, 0x89, 0x21, 0x38,
	0xf1, 0x96, 0x15, 0x1b, 0x34, 0xa3, 0x2c, 0x0e, 0xf7, 0x23, 0x38, 0xa2, 0x1f, 0xc1, 0x71, 0xfc,
	0xf8, 0x0d, 0xa3, 0xb9, 0xbf, 0xbc, 0x28, 0xd2, 0xf4, 0x0b, 0xe5, 0xfc, 0x32, 0xa6, 0x95, 0x2d,
	0x78, 0x35, 0x0d, 0x7d, 0x35, 0x75, 0x0f, 0xb3, 0xde, 0x63, 0x08, 0x4e, 0x9a, 0x64, 0x49, 0xe9,
	0x89, 0x13, 0x96, 0xc5, 0x1e, 0x8e, 0xfc, 0x31, 0xa0, 0xa3, 0xfa, 0xf2, 0xf8, 0x28, 0x67, 0xa0,
	0xe5, 0xd9, 0x75, 0x79, 0xaf, 0xa0, 0xc7, 0x69, 0xbe, 0x5e, 0x89, 0x24, 0xa3, 0xd8, 0xbe, 0x2b,
	0x27, 0xbe, 0x26, 0x59, 0xf5, 0x72, 0xdc, 0xb6, 0xca, 0x8e, 0x56, 0xb9, 0x82, 0x71, 0xdb, 0x1f,
	0xb4, 0xfc, 0x4d, 0x19, 0x0b, 0xc6, 0xd4, 0x3a, 0xeb, 0xfb, 0xcf, 0x67, 0x55, 0xba, 0xcd, 0xf0,
	0x9f, 0xea, 0x49, 0xf1, 0x9f, 0x03, 0xf0, 0xff, 0x5a, 0x70, 0xb2, 0x90, 0x31, 0xb9, 0xa4, 0xdb,
	0xdb, 0x24, 0xa2, 0xe4, 0x3d, 0xd8, 0x32, 0x96, 0xc8, 0x48, 0x53, 0xd6, 0xf2, 0xcf, 0x1b, 0xb7,
	0xa7, 0x51, 0xce, 0x07, 0x70, 0xcb, 0x58, 0x20, 0x2f, 0xf4, 0x8e, 0x46, 0x06, 0x79, 0x93, 0xfb,
	0x0b, 0x08, 0xfe, 0x08, 0x1d, 0x7c, 0xad, 0xa4, 0xb6, 0xa9, 0x19, 0x19, 0xde, 0xcb, 0x1d, 0x2b,
	0x75, 0x7c, 0x70, 0x1f, 0x1f, 0x3c, 0x88, 0x6f, 0x3e, 0x85, 0x85, 0xc4, 0x2b, 0x97, 0xc9, 0xeb,
	0xfa, 0xae, 0x1d, 0x17, 0xd3, 0x9b, 0x3e, 0xbc, 0xe1, 0xce, 0x0a, 0xc0, 0xbc, 0x38, 0x8f, 0xae,
	0x49, 0x53, 0x76, 0xfd, 0xd5, 0x78, 0x44, 0x2f, 0x35, 0xc1, 0xc1, 0x4e, 0x70, 0xf0, 0x18, 0xf8,
	0xa7, 0xab, 0xa6, 0xde, 0xfd, 0x0b, 0x00, 0x00, 0xff, 0xff, 0x5b, 0x59, 0xb9, 0xbb, 0xf9, 0x06,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// LogicServiceClient is the client API for LogicService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LogicServiceClient interface {
	Auth(ctx context.Context, in *AuthRequest, opts ...grpc.CallOption) (*AuthResponse, error)
	Logout(ctx context.Context, in *LogoutRequest, opts ...grpc.CallOption) (*LogoutResponse, error)
	C2CSend(ctx context.Context, in *C2CSendRequest, opts ...grpc.CallOption) (*C2CSendResponse, error)
	C2GSend(ctx context.Context, in *C2GSendRequest, opts ...grpc.CallOption) (*C2GSendResponse, error)
	C2SPull(ctx context.Context, in *C2SPullMessageRequest, opts ...grpc.CallOption) (*C2SPullMessageResponse, error)
	C2CPushAck(ctx context.Context, in *C2CPushResponse, opts ...grpc.CallOption) (*Response, error)
	C2GPushAck(ctx context.Context, in *C2GPushResponse, opts ...grpc.CallOption) (*Response, error)
}

type logicServiceClient struct {
	cc *grpc.ClientConn
}

func NewLogicServiceClient(cc *grpc.ClientConn) LogicServiceClient {
	return &logicServiceClient{cc}
}

func (c *logicServiceClient) Auth(ctx context.Context, in *AuthRequest, opts ...grpc.CallOption) (*AuthResponse, error) {
	out := new(AuthResponse)
	err := c.cc.Invoke(ctx, "/protocol.LogicService/Auth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *logicServiceClient) Logout(ctx context.Context, in *LogoutRequest, opts ...grpc.CallOption) (*LogoutResponse, error) {
	out := new(LogoutResponse)
	err := c.cc.Invoke(ctx, "/protocol.LogicService/Logout", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *logicServiceClient) C2CSend(ctx context.Context, in *C2CSendRequest, opts ...grpc.CallOption) (*C2CSendResponse, error) {
	out := new(C2CSendResponse)
	err := c.cc.Invoke(ctx, "/protocol.LogicService/C2CSend", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *logicServiceClient) C2GSend(ctx context.Context, in *C2GSendRequest, opts ...grpc.CallOption) (*C2GSendResponse, error) {
	out := new(C2GSendResponse)
	err := c.cc.Invoke(ctx, "/protocol.LogicService/C2GSend", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *logicServiceClient) C2SPull(ctx context.Context, in *C2SPullMessageRequest, opts ...grpc.CallOption) (*C2SPullMessageResponse, error) {
	out := new(C2SPullMessageResponse)
	err := c.cc.Invoke(ctx, "/protocol.LogicService/C2SPull", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *logicServiceClient) C2CPushAck(ctx context.Context, in *C2CPushResponse, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/protocol.LogicService/C2CPushAck", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *logicServiceClient) C2GPushAck(ctx context.Context, in *C2GPushResponse, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/protocol.LogicService/C2GPushAck", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LogicServiceServer is the server API for LogicService service.
type LogicServiceServer interface {
	Auth(context.Context, *AuthRequest) (*AuthResponse, error)
	Logout(context.Context, *LogoutRequest) (*LogoutResponse, error)
	C2CSend(context.Context, *C2CSendRequest) (*C2CSendResponse, error)
	C2GSend(context.Context, *C2GSendRequest) (*C2GSendResponse, error)
	C2SPull(context.Context, *C2SPullMessageRequest) (*C2SPullMessageResponse, error)
	C2CPushAck(context.Context, *C2CPushResponse) (*Response, error)
	C2GPushAck(context.Context, *C2GPushResponse) (*Response, error)
}

// UnimplementedLogicServiceServer can be embedded to have forward compatible implementations.
type UnimplementedLogicServiceServer struct {
}

func (*UnimplementedLogicServiceServer) Auth(ctx context.Context, req *AuthRequest) (*AuthResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Auth not implemented")
}
func (*UnimplementedLogicServiceServer) Logout(ctx context.Context, req *LogoutRequest) (*LogoutResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Logout not implemented")
}
func (*UnimplementedLogicServiceServer) C2CSend(ctx context.Context, req *C2CSendRequest) (*C2CSendResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method C2CSend not implemented")
}
func (*UnimplementedLogicServiceServer) C2GSend(ctx context.Context, req *C2GSendRequest) (*C2GSendResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method C2GSend not implemented")
}
func (*UnimplementedLogicServiceServer) C2SPull(ctx context.Context, req *C2SPullMessageRequest) (*C2SPullMessageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method C2SPull not implemented")
}
func (*UnimplementedLogicServiceServer) C2CPushAck(ctx context.Context, req *C2CPushResponse) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method C2CPushAck not implemented")
}
func (*UnimplementedLogicServiceServer) C2GPushAck(ctx context.Context, req *C2GPushResponse) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method C2GPushAck not implemented")
}

func RegisterLogicServiceServer(s *grpc.Server, srv LogicServiceServer) {
	s.RegisterService(&_LogicService_serviceDesc, srv)
}

func _LogicService_Auth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogicServiceServer).Auth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.LogicService/Auth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogicServiceServer).Auth(ctx, req.(*AuthRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LogicService_Logout_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LogoutRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogicServiceServer).Logout(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.LogicService/Logout",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogicServiceServer).Logout(ctx, req.(*LogoutRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LogicService_C2CSend_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(C2CSendRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogicServiceServer).C2CSend(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.LogicService/C2CSend",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogicServiceServer).C2CSend(ctx, req.(*C2CSendRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LogicService_C2GSend_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(C2GSendRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogicServiceServer).C2GSend(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.LogicService/C2GSend",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogicServiceServer).C2GSend(ctx, req.(*C2GSendRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LogicService_C2SPull_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(C2SPullMessageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogicServiceServer).C2SPull(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.LogicService/C2SPull",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogicServiceServer).C2SPull(ctx, req.(*C2SPullMessageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LogicService_C2CPushAck_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(C2CPushResponse)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogicServiceServer).C2CPushAck(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.LogicService/C2CPushAck",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogicServiceServer).C2CPushAck(ctx, req.(*C2CPushResponse))
	}
	return interceptor(ctx, in, info, handler)
}

func _LogicService_C2GPushAck_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(C2GPushResponse)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogicServiceServer).C2GPushAck(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.LogicService/C2GPushAck",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogicServiceServer).C2GPushAck(ctx, req.(*C2GPushResponse))
	}
	return interceptor(ctx, in, info, handler)
}

var _LogicService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protocol.LogicService",
	HandlerType: (*LogicServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Auth",
			Handler:    _LogicService_Auth_Handler,
		},
		{
			MethodName: "Logout",
			Handler:    _LogicService_Logout_Handler,
		},
		{
			MethodName: "C2CSend",
			Handler:    _LogicService_C2CSend_Handler,
		},
		{
			MethodName: "C2GSend",
			Handler:    _LogicService_C2GSend_Handler,
		},
		{
			MethodName: "C2SPull",
			Handler:    _LogicService_C2SPull_Handler,
		},
		{
			MethodName: "C2CPushAck",
			Handler:    _LogicService_C2CPushAck_Handler,
		},
		{
			MethodName: "C2GPushAck",
			Handler:    _LogicService_C2GPushAck_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "logic.proto",
}
